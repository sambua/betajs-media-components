{"_id":"tracejs","_rev":"34-24937287bd8d9b3541e8477b975f25aa","name":"tracejs","description":"Expand Error.stack traces into usable objects providing context and highlighting","dist-tags":{"latest":"0.1.8"},"versions":{"0.0.1":{"author":{"name":"Chris Dickinson","email":"chris@neversaw.us","url":"http://neversaw.us/"},"name":"tracejs","description":"Expand Error.stack traces into usable objects providing context and highlighting","version":"0.0.1","homepage":"http://github.com/chrisdickinson/tracejs/","repository":{"type":"git","url":"git://github.com/chrisdickinson/tracejs.git"},"main":"trace.js","engines":{"node":"~v0.4.7"},"dependencies":{"ansi-color":"0.2.X"},"devDependencies":{},"_id":"tracejs@0.0.1","_engineSupported":false,"_npmVersion":"1.0.6","_nodeVersion":"v0.4.7","_defaultsLoaded":true,"dist":{"shasum":"cbfe0d0ef9520286365ca1a3c1561f8597ed4170","tarball":"https://registry.npmjs.org/tracejs/-/tracejs-0.0.1.tgz","integrity":"sha512-f7QfmS/1S7o+fu5LfAlWz6Sy1IGhilXEUD3UoMWn604sBLGuclWfJy5Bqg8MkGeJoY3MGk1O/c2IeJMT9WDmTw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDMHZ6yyp7aFIAwS1zaMUyJ9H3sgJs66nJ7Vzm6WOSkCAiEA4cKpM7+XCjqWCyRcv1jWSUujtqpdDVxPgcBExaphuSQ="}]},"scripts":{},"directories":{}},"0.0.2":{"author":{"name":"Chris Dickinson","email":"chris@neversaw.us","url":"http://neversaw.us/"},"name":"tracejs","description":"Expand Error.stack traces into usable objects providing context and highlighting","version":"0.0.2","homepage":"http://github.com/chrisdickinson/tracejs/","repository":{"type":"git","url":"git://github.com/chrisdickinson/tracejs.git"},"main":"trace.js","engines":{"node":"0.4.X"},"dependencies":{"ansi-color":"0.2.X"},"devDependencies":{},"_id":"tracejs@0.0.2","_engineSupported":true,"_npmVersion":"1.0.6","_nodeVersion":"v0.4.7","_defaultsLoaded":true,"dist":{"shasum":"1b28dca171b166baaef9116333d7220ed512e6cd","tarball":"https://registry.npmjs.org/tracejs/-/tracejs-0.0.2.tgz","integrity":"sha512-84T61pYuhJC+jHD/18PCI5K3lEBJLbvdCm+KzBJftCL9T3Zmj8Pk8CGiprSM09JJE2NSikpoQpOnA0a7QFWGLQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQD0OafhGBykKXHDquInILWGnIhSroTE6mRwABEuBef7PwIgcs8cUG4kr/iJWSWjAnBiVVEUWqPQIuhWdGYW+boV04U="}]},"scripts":{},"directories":{}},"0.0.3":{"author":{"name":"Chris Dickinson","email":"chris@neversaw.us","url":"http://neversaw.us/"},"name":"tracejs","description":"Expand Error.stack traces into usable objects providing context and highlighting","version":"0.0.3","homepage":"http://github.com/chrisdickinson/tracejs/","repository":{"type":"git","url":"git://github.com/chrisdickinson/tracejs.git"},"main":"trace.js","engines":{"node":"0.4.X"},"dependencies":{"ansi-color":"0.2.X"},"devDependencies":{},"_id":"tracejs@0.0.3","_engineSupported":true,"_npmVersion":"1.0.6","_nodeVersion":"v0.4.7","_defaultsLoaded":true,"dist":{"shasum":"d583177ea6f18baa3b377c5367052d21387e4cc8","tarball":"https://registry.npmjs.org/tracejs/-/tracejs-0.0.3.tgz","integrity":"sha512-Fn31v8nsSv0DVhBE77gxrdbvvm9oQqN7UupmaqYs9M4Pnw+juZCq1ulz5VgllFsZNN0VQ65wDP8PTT7SLLIGCw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCaELQ9Qu6DQAL0u9Ak+eVyTUdjgYToNC67AWMzrcYw/AIhAP3FB62JqGOWag6lopR7SuJyLKRF/afSmFQVnZaHnRz9"}]},"scripts":{},"directories":{}},"0.1.0":{"author":{"name":"Chris Dickinson","email":"chris@neversaw.us","url":"http://neversaw.us/"},"name":"tracejs","description":"Expand Error.stack traces into usable objects providing context and highlighting","version":"0.1.0","homepage":"http://github.com/chrisdickinson/tracejs/","repository":{"type":"git","url":"git://github.com/chrisdickinson/tracejs.git"},"scripts":{"test":"node test/test.js"},"main":"trace.js","engines":{"node":"0.4.X"},"dependencies":{"ansi-color":"0.2.X"},"devDependencies":{},"_id":"tracejs@0.1.0","_engineSupported":true,"_npmVersion":"1.0.6","_nodeVersion":"v0.4.7","_defaultsLoaded":true,"dist":{"shasum":"b323f871cf3643b6d3092403d4524873c5946145","tarball":"https://registry.npmjs.org/tracejs/-/tracejs-0.1.0.tgz","integrity":"sha512-uxgOvHgpp8LgGsbHNQZlfFvtzgt3rfS4+T39WDsy3e0r4ILQzeUc0msO1re0OcSOu1fSG2fMeYuiJ6hTk7QtCQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCICfqiMWCTayY+aRL6JJbbWQPHPXAVFwklrz/AMiR+EmzAiEA3TDrp49tECHH9mAkTfCGNQWANIAem3+yKsg4YwXjbCI="}]}},"0.1.1":{"author":{"name":"Chris Dickinson","email":"chris@neversaw.us","url":"http://neversaw.us/"},"name":"tracejs","description":"Expand Error.stack traces into usable objects providing context and highlighting","version":"0.1.1","homepage":"http://github.com/chrisdickinson/tracejs/","repository":{"type":"git","url":"git://github.com/chrisdickinson/tracejs.git"},"scripts":{"test":"node test/test.js"},"main":"trace.js","engines":{"node":"0.4.X"},"dependencies":{},"devDependencies":{},"_id":"tracejs@0.1.1","_engineSupported":true,"_npmVersion":"1.0.6","_nodeVersion":"v0.4.7","_defaultsLoaded":true,"dist":{"shasum":"7991e431a95c06bfe65af2600bb4abc3feca324e","tarball":"https://registry.npmjs.org/tracejs/-/tracejs-0.1.1.tgz","integrity":"sha512-/TFakpIP3eTqqUjO8eBV8oMYTxvpQ/mC9FnDagwHtkxmVNZ7tfLWQ/Wfws4TyGfKPOk2fP2ub5QJnbjxXANxsw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCVH8Okt0rd0WAGbDRSSELjVrXk2EyIotw/c1Zh28h4SAIgHvjsQwcwJaLtx24kniL15AEPUyIR3LN0Egfbybz9YWo="}]}},"0.1.2":{"author":{"name":"Chris Dickinson","email":"chris@neversaw.us","url":"http://neversaw.us/"},"name":"tracejs","description":"Expand Error.stack traces into usable objects providing context and highlighting","version":"0.1.2","homepage":"http://github.com/chrisdickinson/tracejs/","repository":{"type":"git","url":"git://github.com/chrisdickinson/tracejs.git"},"scripts":{"test":"node test/test.js"},"main":"trace.js","engines":{"node":"0.4.X"},"dependencies":{},"devDependencies":{},"_id":"tracejs@0.1.2","_engineSupported":true,"_npmVersion":"1.0.6","_nodeVersion":"v0.4.7","_defaultsLoaded":true,"dist":{"shasum":"f2e59ba20fd0cd90a5c40e06fefeaa80c62105b6","tarball":"https://registry.npmjs.org/tracejs/-/tracejs-0.1.2.tgz","integrity":"sha512-VP6CwOSu2Dz7TNDM9FFJjQnTN1v9+TBrgqx0gZBir9l+iDGrRrCoyR+ZL6ETL/eXtS+L2IQIOiJqgO5/oxh0YA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDhhfKZCeyQyMjZmrrIXZtO8qwi0lrciK6tY/eqI2AuDAIhAKCO3m5nnxeofjoRIPQ8vrhWcyEH+xiGVMKSSnGh+Jey"}]}},"0.1.3":{"author":{"name":"Chris Dickinson","email":"chris@neversaw.us","url":"http://neversaw.us/"},"name":"tracejs","description":"Expand Error.stack traces into usable objects providing context and highlighting","version":"0.1.3","homepage":"http://github.com/chrisdickinson/tracejs/","repository":{"type":"git","url":"git://github.com/chrisdickinson/tracejs.git"},"scripts":{"test":"node test/test.js"},"main":"trace.js","engines":{"node":">=0.4.0"},"dependencies":{},"devDependencies":{},"_id":"tracejs@0.1.3","_engineSupported":true,"_npmVersion":"1.0.6","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"f33a8c678a62c0be92bd0d3889bb157019c1f5b6","tarball":"https://registry.npmjs.org/tracejs/-/tracejs-0.1.3.tgz","integrity":"sha512-ga+05HakmHhdtu7d2xt+nZ/9I71ZD2ApCtIaQZe6xlRm201bcPi5EQPu2I8Z90ee3ZMw2cyacRGNtLdj3Mbcrg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIHpBm1zcBNJi2t1BdWblorcC8jP2Aqlk1yLTwudiCAvBAiEAhu7sOsbT9oGE17qnfvbCcRLg7bLN5QN+YQyBzFhDJEU="}]},"maintainers":[{"name":"chrisdickinson","email":"chris@neversaw.us"}]},"0.1.4":{"author":{"name":"Chris Dickinson","email":"chris@neversaw.us","url":"http://neversaw.us/"},"name":"tracejs","description":"Expand Error.stack traces into usable objects providing context and highlighting","version":"0.1.4","homepage":"http://github.com/chrisdickinson/tracejs/","repository":{"type":"git","url":"git://github.com/chrisdickinson/tracejs.git"},"scripts":{"test":"node test/test.js"},"main":"trace.js","engines":{"node":">=0.4.0"},"dependencies":{},"devDependencies":{},"_npmUser":{"name":"chrisdickinson","email":"chris@neversaw.us"},"_id":"tracejs@0.1.4","_engineSupported":true,"_npmVersion":"1.0.101","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"29dbeb4ae107892f76548cdfa1be8e1a73758de6","tarball":"https://registry.npmjs.org/tracejs/-/tracejs-0.1.4.tgz","integrity":"sha512-5PAlG173YFX5YLAIVRbK7E+sEi3iM5xJ6c0wpTi3rdjDJJmRadbV2t9sdtNwDHR3mja8Nag1e99N1zJ/AAsKXg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDA6yNttuIupTXm4/jLLhM9kj1hbeu4+KtzHVG6fIVidQIhAKuwh48BqromDvvDONSaMW16T3du5uzjkTx6ZATwSvfr"}]},"maintainers":[{"name":"chrisdickinson","email":"chris@neversaw.us"}]},"0.1.6":{"author":{"name":"Chris Dickinson","email":"chris@neversaw.us","url":"http://neversaw.us/"},"name":"tracejs","description":"Expand Error.stack traces into usable objects providing context and highlighting","version":"0.1.6","homepage":"http://github.com/chrisdickinson/tracejs/","repository":{"type":"git","url":"git://github.com/chrisdickinson/tracejs.git"},"scripts":{"test":"node test/test.js"},"main":"trace.js","engines":{"node":">=0.4.0"},"dependencies":{},"devDependencies":{},"readme":"Trace.js\n========\n\nProviding better stack traces for V8 by giving you full-fledged objects for each frame in the trace.\n\nExamples\n========\n\nCreating a nice color trace with context, reversed so that the latest call is printed last:\n\n````javascript\nvar trace = require('tracejs').trace;\n\ntry {\n    somethingThatThrowsAnError();\n} catch(err) {\n    var stacktrace = trace(err);\n    console.error(stacktrace.toString());\n}\n````\n\nIterating through frames and grabbing the constituent files:\n\n````javascript\nvar trace = require('tracejs').trace;\n\ntry {\n    somethingThatThrowsAnError();\n} catch(err) {\n    var stacktrace = trace(err);\n    for(var i = 0, len = stacktrace.frames.length; i < len; ++i) {\n        console.error(stacktrace.frames[i].filename, stacktrace.frames[i].filedata());\n    }\n}\n````\n\nAPI\n===\n\ntrace(err)\n-----\n\nCreates and returns a `Trace` object by parsing an `Error` object.\n\nobject Trace\n------------\n\nHolds the original error, the first line of the trace (the message), and the frames that make up the stack trace. Returned by `trace`.\n\nMembers:\n\n*  `frames`: an `Array` of `Frame` objects.\n*  `first_line`: the first line of the original stack trace -- usually contains the error message, if any.\n*  `original_error`: the original `Error` object that the `Trace` was generated from.\n\nThe default output of `Trace#toString` looks like the following:\n\n![trace](http://neversaw.us/media/traces.png)\n\nTrace.defaults\n--------------\n\nThe default printing mode for the trace; an array of `[context_lines:int, `print_cursor:boolean`, `highlight_character_color:string`].\nDefaults to two lines of context with a cursor, with the character that caused the error appearing red.\n\nTrace#toString(reversed[, contextLines, showCursor, highlightErrorCharacterColor])\n--------------\n\nReturns the prettified stack trace as a string, using `Trace.defaults`. `reversed` defaults to `true`, meaning the most recent call is displayed last. The remaining arguments are passed to `Frame#toString` for each frame in `Trace#frames`. \n\nobject Frame\n------------ \n\nContains information about a specific stack frame.\n\nMembers:\n\n*  `named_location`: The name of the scope where the frame originated; e.g., `'ReadStream.emit'`.\n*  `filename`: The filename of the frame.\n*  `line`: The integer line number of the frame.\n*  `character`: The character at which the error occurred in the line of the frame.\n\nFrame#filedata()\n--------------\n\nReturns a string containing the text of the file the frame originated from. Works on both native modules as well as userland modules. Cached and synchronous.\n\nFrame#toString([contextLines, showCursor, highlightErrorCharacterColor])\n---------------\n\nWraps the output from `Frame#get_lines()` with information about the file, line number, character, and scope if available.\n\nFrame#get_lines(context, ascii_cursor, highlight_error_start)\n---------------\n\nReturns a string containing `context` lines surrounding the error line from the file of this frame. If `ascii_cursor` is `true`, it will\ninsert a `>` at the line where the error occurred, and a space before all other lines. `highlight_error_start` can be any value that [ansi-colors](https://github.com/loopj/commonjs-ansi-color) will accept, or false to avoid highlighting the character.\n\nLicense\n=======\n\nnew BSD.\n","readmeFilename":"README.md","_id":"tracejs@0.1.6","dist":{"shasum":"074fb367f2de4598359c6d7fefffb64fa782faa4","tarball":"https://registry.npmjs.org/tracejs/-/tracejs-0.1.6.tgz","integrity":"sha512-qxpOVTH01R96V/+4tyntmu7PXNtgJ+A0I4y9ys4fqG/mlNeN5RYxJbRxugVg3lKQs372btkrh7dLlHwfl0CLSA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDQACv4DTtW7WJai/LuLJqhSScEHbzBwpJmxSFZ2oqf9gIgHNUAQon7+dYLZ5PvL3G7Oc84mPf6hcFPj10sDfud8IA="}]},"_from":".","_npmVersion":"1.2.14","_npmUser":{"name":"chrisdickinson","email":"chris@neversaw.us"},"maintainers":[{"name":"chrisdickinson","email":"chris@neversaw.us"}]},"0.1.7":{"author":{"name":"Chris Dickinson","email":"chris@neversaw.us","url":"http://neversaw.us/"},"name":"tracejs","description":"Expand Error.stack traces into usable objects providing context and highlighting","version":"0.1.7","homepage":"http://github.com/chrisdickinson/tracejs/","repository":{"type":"git","url":"git://github.com/chrisdickinson/tracejs.git"},"scripts":{"test":"node test/test.js"},"main":"trace.js","engines":{"node":">=0.4.0"},"dependencies":{},"devDependencies":{},"readme":"Trace.js\n========\n\nProviding better stack traces for V8 by giving you full-fledged objects for each frame in the trace.\n\nExamples\n========\n\nCreating a nice color trace with context, reversed so that the latest call is printed last:\n\n````javascript\nvar trace = require('tracejs').trace;\n\ntry {\n    somethingThatThrowsAnError();\n} catch(err) {\n    var stacktrace = trace(err);\n    console.error(stacktrace.toString());\n}\n````\n\nIterating through frames and grabbing the constituent files:\n\n````javascript\nvar trace = require('tracejs').trace;\n\ntry {\n    somethingThatThrowsAnError();\n} catch(err) {\n    var stacktrace = trace(err);\n    for(var i = 0, len = stacktrace.frames.length; i < len; ++i) {\n        console.error(stacktrace.frames[i].filename, stacktrace.frames[i].filedata());\n    }\n}\n````\n\nAPI\n===\n\ntrace(err)\n-----\n\nCreates and returns a `Trace` object by parsing an `Error` object.\n\nobject Trace\n------------\n\nHolds the original error, the first line of the trace (the message), and the frames that make up the stack trace. Returned by `trace`.\n\nMembers:\n\n*  `frames`: an `Array` of `Frame` objects.\n*  `first_line`: the first line of the original stack trace -- usually contains the error message, if any.\n*  `original_error`: the original `Error` object that the `Trace` was generated from.\n\nThe default output of `Trace#toString` looks like the following:\n\n![trace](http://neversaw.us/media/traces.png)\n\nTrace.defaults\n--------------\n\nThe default printing mode for the trace; an array of `[context_lines:int, `print_cursor:boolean`, `highlight_character_color:string`].\nDefaults to two lines of context with a cursor, with the character that caused the error appearing red.\n\nTrace#toString(reversed[, contextLines, showCursor, highlightErrorCharacterColor])\n--------------\n\nReturns the prettified stack trace as a string, using `Trace.defaults`. `reversed` defaults to `true`, meaning the most recent call is displayed last. The remaining arguments are passed to `Frame#toString` for each frame in `Trace#frames`. \n\nobject Frame\n------------ \n\nContains information about a specific stack frame.\n\nMembers:\n\n*  `named_location`: The name of the scope where the frame originated; e.g., `'ReadStream.emit'`.\n*  `filename`: The filename of the frame.\n*  `line`: The integer line number of the frame.\n*  `character`: The character at which the error occurred in the line of the frame.\n\nFrame#filedata()\n--------------\n\nReturns a string containing the text of the file the frame originated from. Works on both native modules as well as userland modules. Cached and synchronous.\n\nFrame#toString([contextLines, showCursor, highlightErrorCharacterColor])\n---------------\n\nWraps the output from `Frame#get_lines()` with information about the file, line number, character, and scope if available.\n\nFrame#get_lines(context, ascii_cursor, highlight_error_start)\n---------------\n\nReturns a string containing `context` lines surrounding the error line from the file of this frame. If `ascii_cursor` is `true`, it will\ninsert a `>` at the line where the error occurred, and a space before all other lines. `highlight_error_start` can be any value that [ansi-colors](https://github.com/loopj/commonjs-ansi-color) will accept, or false to avoid highlighting the character.\n\nLicense\n=======\n\nnew BSD.\n","readmeFilename":"README.md","_id":"tracejs@0.1.7","dist":{"shasum":"943f8997f36cd5ff9e0ee92c7c73c73dad77801a","tarball":"https://registry.npmjs.org/tracejs/-/tracejs-0.1.7.tgz","integrity":"sha512-aJL3mIsuxwoWt5m+7rCalFDcJmaPHaATCfJuzKORfIun/I7u31imKXTnAq3OEQZhlNathDDk6J6uYyClBndftw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDUBeCRlg/Yn8HvYlekqM0PRvs6XWu8WyATNveBOh/q9AiEA1Rr4C+k9cKHlal0LUyd/VuLj4XZ3BHam+R8gHVdLE3Y="}]},"_from":".","_npmVersion":"1.2.14","_npmUser":{"name":"chrisdickinson","email":"chris@neversaw.us"},"maintainers":[{"name":"chrisdickinson","email":"chris@neversaw.us"}]},"0.1.8":{"author":{"name":"Chris Dickinson","email":"chris@neversaw.us","url":"http://neversaw.us/"},"name":"tracejs","description":"Expand Error.stack traces into usable objects providing context and highlighting","version":"0.1.8","homepage":"http://github.com/chrisdickinson/tracejs/","repository":{"type":"git","url":"git://github.com/chrisdickinson/tracejs.git"},"scripts":{"test":"node test/test.js"},"main":"trace.js","engines":{"node":">=0.4.0"},"dependencies":{},"devDependencies":{},"readme":"Trace.js\n========\n\nProviding better stack traces for V8 by giving you full-fledged objects for each frame in the trace.\n\nExamples\n========\n\nCreating a nice color trace with context, reversed so that the latest call is printed last:\n\n````javascript\nvar trace = require('tracejs').trace;\n\ntry {\n    somethingThatThrowsAnError();\n} catch(err) {\n    var stacktrace = trace(err);\n    console.error(stacktrace.toString());\n}\n````\n\nIterating through frames and grabbing the constituent files:\n\n````javascript\nvar trace = require('tracejs').trace;\n\ntry {\n    somethingThatThrowsAnError();\n} catch(err) {\n    var stacktrace = trace(err);\n    for(var i = 0, len = stacktrace.frames.length; i < len; ++i) {\n        console.error(stacktrace.frames[i].filename, stacktrace.frames[i].filedata());\n    }\n}\n````\n\nAPI\n===\n\ntrace(err)\n-----\n\nCreates and returns a `Trace` object by parsing an `Error` object.\n\nobject Trace\n------------\n\nHolds the original error, the first line of the trace (the message), and the frames that make up the stack trace. Returned by `trace`.\n\nMembers:\n\n*  `frames`: an `Array` of `Frame` objects.\n*  `first_line`: the first line of the original stack trace -- usually contains the error message, if any.\n*  `original_error`: the original `Error` object that the `Trace` was generated from.\n\nThe default output of `Trace#toString` looks like the following:\n\n![trace](http://neversaw.us/media/traces.png)\n\nTrace.defaults\n--------------\n\nThe default printing mode for the trace; an array of `[context_lines:int, `print_cursor:boolean`, `highlight_character_color:string`].\nDefaults to two lines of context with a cursor, with the character that caused the error appearing red.\n\nTrace#toString(reversed[, contextLines, showCursor, highlightErrorCharacterColor])\n--------------\n\nReturns the prettified stack trace as a string, using `Trace.defaults`. `reversed` defaults to `true`, meaning the most recent call is displayed last. The remaining arguments are passed to `Frame#toString` for each frame in `Trace#frames`. \n\nobject Frame\n------------ \n\nContains information about a specific stack frame.\n\nMembers:\n\n*  `named_location`: The name of the scope where the frame originated; e.g., `'ReadStream.emit'`.\n*  `filename`: The filename of the frame.\n*  `line`: The integer line number of the frame.\n*  `character`: The character at which the error occurred in the line of the frame.\n\nFrame#filedata()\n--------------\n\nReturns a string containing the text of the file the frame originated from. Works on both native modules as well as userland modules. Cached and synchronous.\n\nFrame#toString([contextLines, showCursor, highlightErrorCharacterColor])\n---------------\n\nWraps the output from `Frame#get_lines()` with information about the file, line number, character, and scope if available.\n\nFrame#get_lines(context, ascii_cursor, highlight_error_start)\n---------------\n\nReturns a string containing `context` lines surrounding the error line from the file of this frame. If `ascii_cursor` is `true`, it will\ninsert a `>` at the line where the error occurred, and a space before all other lines. `highlight_error_start` can be any value that [ansi-colors](https://github.com/loopj/commonjs-ansi-color) will accept, or false to avoid highlighting the character.\n\nLicense\n=======\n\nnew BSD.\n","readmeFilename":"README.md","_id":"tracejs@0.1.8","dist":{"shasum":"6c26787b1853f1371634622c1c80bc44026c5d70","tarball":"https://registry.npmjs.org/tracejs/-/tracejs-0.1.8.tgz","integrity":"sha512-Uree1f6xO1Jgmk/wkX6pe9SdYP8vy/Gw9+pDn521XNx913NvXKzVRnzYzwx2ZgYpmtRHU0xKkrAqCaHvfF+AHw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDPS32zSzd+rfmivBWQuIhSKQ6MTvh7qKqwxMeywpczfQIhANIIgqNDn3arkYbO+kxOM8DBNpnvNE301tGIClj/bTTd"}]},"_from":".","_npmVersion":"1.2.14","_npmUser":{"name":"chrisdickinson","email":"chris@neversaw.us"},"maintainers":[{"name":"chrisdickinson","email":"chris@neversaw.us"}]}},"maintainers":[{"name":"chrisdickinson","email":"chris@neversaw.us"}],"time":{"modified":"2022-06-27T19:34:04.832Z","created":"2011-06-21T23:05:17.400Z","0.0.1":"2011-06-21T23:05:17.748Z","0.0.2":"2011-06-21T23:15:43.803Z","0.0.333":"2011-06-21T23:50:03.189Z","0.0.3":"2011-06-21T23:52:40.671Z","0.1.0":"2011-06-22T03:24:04.649Z","0.1.1":"2011-06-22T04:33:15.403Z","0.1.2":"2011-06-22T06:02:03.457Z","0.1.3":"2011-09-22T20:37:43.431Z","0.1.4":"2011-11-30T17:51:01.150Z","0.1.6":"2013-03-15T02:26:16.727Z","0.1.7":"2013-03-15T02:46:54.485Z","0.1.8":"2013-03-15T03:04:39.447Z"},"author":{"name":"Chris Dickinson","email":"chris@neversaw.us","url":"http://neversaw.us/"},"repository":{"type":"git","url":"git://github.com/chrisdickinson/tracejs.git"},"users":{"curious-attempt-bunny":true}}