name: CI
run-name: Auto Continues Integration for betajs-media-components | Debug Mode ${{ inputs.debug }}

on:
  push:
    branches: [ master ]
    paths-ignore: [ 'demos/**' ]
  pull_request:
    branches: [ '*' ]
    types: [ opened, synchronize, reopened ]
    paths: [ 'src/**', 'tests/**' ]
  workflow_dispatch:
    inputs:
      debug:
        description: 'Will show some additional debug information'
        type: choice
        default: false
        options: [ 'true', 'false' ]
      use-cache:
        description: 'Use cache for the workflow'
        type: choice
        default: false
        options: [ 'true', 'false' ]
  workflow_call:
    inputs:
      appName:
        description: 'Name of the app being deployed'
        required: false
        default: ${{ github.event.repository.name }}
        type: string
      commitName:
        description: 'Commit message'
        required: false
        default: ${{ github.event.head_commit.message }}
        type: string
      commitKey:
        description: 'Unique key for cache'
        required: false
        default: ${{ github.event.pull_request.head.sha || github.head_ref || github.ref_name }} #"${{ github.head_ref }}.${{ github.sha }}"
        type: string
      runsOn:
        description: 'Run on server'
        required: true
        type: string
        default: ubuntu-latest
        # options: [ ubuntu-latest, macos-latest, windows-latest, self-hosted, linux, x64, gpu ]

jobs:
  build:
    timeout-minutes: 10
    runs-on: macos-latest
    outputs:
      node-version: ${{ matrix.node-version }}
      cache-hit: ${{ steps.node.outputs.cache-hit }}
      cache-key: ${{ steps.node.outputs.cache-key }}
      package-cache-dir: ${{ steps.node.outputs.package-cache-dir }}
    defaults:
      run:
        working-directory: .
        shell: bash
    strategy:
      matrix:
        node-version: [ '18.x' ]
        pkg-manager: [ 'npm' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies and global packages via npm package manager
        id: node
        uses: ./.github/actions/install-dependencies
        with:
          version: ${{ matrix.node-version }}
          pkg-manager: ${{ matrix.pkg-manager }}
          use-cache: ${{ inputs.use-cache }}

      - name: build component
        uses: ./.github/actions/build-component

  e2e-tests:
    timeout-minutes: 60
    needs: [ build ]
    continue-on-error: false
    runs-on: macos-latest
    # container:
    #   image: mcr.microsoft.com/playwright:v1.44.0-jammy
    strategy:
      matrix:
        project: [ chromium ]
        chrome-version: [ latest ] # latest, stable, beta, dev, canary or number like: 119 or 120.0.6099 (https://googlechromelabs.github.io/chrome-for-testing/)
    steps:
      - uses: actions/checkout@v4
      # - uses: actions/setup-node@v4
      #   with:
      #     node-version: '18.x'

      - name: Install dependencies and global packages via npm package manager
        id: node
        uses: ./.github/actions/install-dependencies
        with:
          version: '18.x'
          pkg-manager: 'npm'
          use-cache: 'false'

      # - name: build component
      #   uses: ./.github/actions/build-component

      - name: Run Local Server
        id: local-server
        uses: ./.github/actions/local-server

      - name: Run Playwright
        uses: ./.github/actions/playwright-test
        with:
          project: ${{ matrix.project }}
          port: ${{ steps.local-server.outputs.port }}
          chrome-version: ${{ matrix.chrome-version }}


      # - name: Run Playwright tests
      #   shell: bash
      #   run: |
      #     npx playwright test --project=${{ matrix.project }} --config ./tests/playwright/config.js
       # env:
       #   HOME: /root

     # - name: Checkout
     #   uses: actions/checkout@v4
     # - name: Run Playwright via Docker container
     #   id: playwright-image
     #   uses: ./.github/actions/playwright-image
     #   with:
     #     project: ${{ matrix.project }}
     #     node-version: ${{ matrix.node-version }}

     # - name: Checkout
     #   uses: actions/checkout@v4

     # - name: Set today value
     #   id: date
     #   uses: ./.github/actions/today

     # - name: Install dependencies and global packages via npm package manager
     #   id: node
     #   if: ${{ needs.build.cache-hit == 'false' }}
     #   uses: ./.github/actions/install-dependencies
     #   with:
     #     version: ${{ matrix.node-version }}
     #     pkg-manager: ${{ matrix.pkg-manager }}
     #     cache-key: ${{ needs.build.cache-key }}
     #     use-cache: ${{ inputs.use-cache }}

     # - name: Run Local Server
     #   id: local-server
     #   uses: ./.github/actions/local-server

     # - name: Run Playwright
     #   uses: ./.github/actions/playwright-test
     #   with:
     #     project: ${{ matrix.project }}
     #     port: ${{ steps.local-server.outputs.port }}
     #     chrome-version: ${{ matrix.chrome-version }}

     # - name: Print was success
     #   if: ${{ success() }}
     #   run: echo "We have passed all e2e tests"

     # - name: Print we have failed
     #   if: ${{ failure() }}
     #   run: echo "We have failed one for more e2e tests steps"
