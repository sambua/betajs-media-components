name: Run Local Server
description: 'Run local server for testing'

outputs:
  # pid:
  #   description: 'Process ID of the local server'
  #   value: ${{ steps.get-pid.outputs.pid || steps.get-linux-pid.outputs.pid }}
  port:
    description: 'Port where local server is running'
    value: ${{ inputs.port }}

inputs:
  port:
    description: 'Port where local server will be run, should be the same as .env.actions'
    default: 5000
    required: false
  os:
    description: 'Operating system, allowed: ubuntu, windows or macos'
    default: linux
    required: false

runs:
  using: composite
  steps:
    # - name: Install local web server via http-server package and run in the background
    #   shell: bash
    #   run: |
    #     npm install --global http-server
    #     http-server ./ -p ${{ inputs.port }} > http-server.log 2>&1 &
    #     echo "Local server is running on http://localhost:${{ inputs.port }}"

    - name: Run nanon media server
      shell: bash
      run: |
          node node_modules/nano-media-server/server.js --staticserve . --port='${{inputs.port }} > http-server.log 2>&1 &'


    # - name: Get Running server PID on macos
    #   id: get-pid
    #   shell: bash
    #   if: ${{ inputs.os == 'macos' }}
    #   run: |
    #     echo "pid=$(ps aux | grep http-server | grep -v grep | awk '{print $2}')" >> $GITHUB_OUTPUT

    # - name: Get Running server PID
    #   id: get-linux-pid
    #   shell: bash
    #   if: ${{ inputs.os == 'linux' }}
    #   run: echo "pid=$(ps axl | grep http-server | awk '{print $8}')" >> $GITHUB_OUTPUT

#    - name: Check the server is running
#      uses: jtalk/url-health-check-action@v4
#      with:
#          url: http://localhost:${{ inputs.port }}/tests/playwright/html/player.html
#          max-retries:
#          expected-status: 200

# PID=$(ps axl | grep node) kill -9 [PID]
# ps axl
