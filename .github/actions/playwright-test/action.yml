name: 'Run Playwright test'
description: 'Run e2e tests via chrome browser using playwright'

inputs:
  project:
    description: Project which will run on testing
    default: chromium
    required: true
  chrome-version:
    description: 'Chrome version on which all will be tested. Note: canary not supported by linux'
    default: latest
    required: false
  config-file:
    description: 'Configuration file for playwright'
    default: './tests/playwright/config.js'
    required: false
  port:
    description: 'Port where local server will be run, should be the same as .env.actions'
    default: '5000'
    required: false

runs:
  using: composite
  steps:
    - name: Get installed Playwright version
      id: playwright-version
      shell: bash
      run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').packages['node_modules/@playwright/test'].version)")" >> $GITHUB_ENV

    # - name: Cache playwright binaries
    #   uses: actions/cache@v4
    #   id: playwright-cache
    #   with:
    #     path: |
    #       ~/.cache/ms-playwright
    #       /root/.cache/ms-playwright
    #     key: "${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}"
    #     restore-keys: "${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}"
    #     save-always: true

    - name: Install Playwright Test Package
      # if: steps.playwright-cache.outputs.cache-hit != 'true'
      shell: bash
      # as PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD not works as expected --with-deps chromium also included, not to install all browsers
      # --cache ~/.cache/ms-playwright
      run: |
        npm install @playwright/test
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1 npx playwright install --with-deps chromium

    # - name: Eco some information
    #   shell: bash
    #   run: |
    #     echo "PLAYWRIGHT_VERSION: $PLAYWRIGHT_VERSION"
    #     echo "RUNNER_OS: $RUNNER_OS"
    #     echo "LIST SEC: $(ls -la /root/.cache/ms-playwright/chromium-1117/chrome-linux)"


      # /Users/runner/Library/Caches/ms-playwright/chromium-1117/chrome-linux
      # /Users/runner/Library/Caches/ms-playwright/chromium-1117/chrome-mac
      # /Users/runner/Library/Caches/ms-playwright/chromium-1117/chrome-mac/Chromium.app/Contents/MacOS/Chromium

    #    - run: npx playwright install-deps
    #      if: steps.playwright-cache.outputs.cache-hit == 'true'

    #    - name: Install browser dependencies and skip browser download
    #      # npx playwright install-deps chromium or # --with-deps chromium
    #      # PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1 npx playwright install # << Seems PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD not working as expected
    #      # install-deps chromium
    #      run: |
    #        npm install @playwright/test
    #        npx playwright install --with-deps chromium

    # install-dependencies: supported only with linux sytem
    # - name: Setup browser chrome version ${{ inputs.chrome-version }}
    #   id: setup-chrome
    #   uses: browser-actions/setup-chrome@v1
    #   with:
    #     chrome-version: ${{ inputs.chrome-version }}
    #     install-dependencies: true

    # - name: Check Chrome version
    #   # chrome --version on ubuntu only
    #   shell: bash
    #   run: |
    #     echo "Chrome Launch Path: ${{ steps.setup-chrome.outputs.chrome-path }}"

    - name: Install cheom on Linux
      if: ${{ contains(runner.os, 'Linux') }}
      id: chrome-install
      shell: bash
      run: |
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        sudo sh -c 'echo "deb https://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
        sudo apt-get update
        sudo apt-get install google-chrome-stable
        echo "CHROME_INSTALL_PATH=$(whereis google-chrome-stable)" >> $GITHUB_ENV
        echo $(which google-chrome-stable)
        echo $(whereis google-chrome-stable)

    - name: Run Playwright on Linux
      if: ${{ contains(runner.os, 'Linux') }}
      shell: bash
      run: xvfb-run npx playwright test --project=${{ inputs.project }} --config ${{ inputs.config-file }}
      env:
        CI: 'true'
        PLAYWRIGHT_PORT: ${{ inputs.port }}
        PLAYWRIGHT_BROWSERS_PATH: ''
        PLAYWRIGHT_CHROMIUM_EXECUTABLE_PATH: ${{ env.CHROME_INSTALL_PATH }}
        PLAYWRIGHT_LAUNCH_OPTIONS_EXECUTABLE_PATH: ${{ env.CHROME_INSTALL_PATH }}
        # PLAYWRIGHT_CHROMIUM_EXECUTABLE_PATH: ${{ steps.setup-chrome.outputs.chrome-path }}
        # PLAYWRIGHT_LAUNCH_OPTIONS_EXECUTABLE_PATH: ${{ steps.setup-chrome.outputs.chrome-path }}
        PLAYWRIGHT_SKIP_VALIDATE_HOST_REQUIREMENTS: 'false'

    - name: Run Playwright on Mac OS
      if: ${{ contains(runner.os, 'macOS') }}
      shell: bash
      # DEBUG=pw:browser
      run: npx playwright test --project=${{ inputs.project }} --config ${{ inputs.config-file }}
      env:
        CI: 'true'
        PLAYWRIGHT_PORT: ${{ inputs.port }}
        # PLAYWRIGHT_BROWSERS_PATH: ''
        # PLAYWRIGHT_CHROMIUM_EXECUTABLE_PATH: "${{ steps.setup-chrome.outputs.chrome-path }}"
        # PLAYWRIGHT_LAUNCH_OPTIONS_EXECUTABLE_PATH: "${{ steps.setup-chrome.outputs.chrome-path }}"
        PLAYWRIGHT_SKIP_VALIDATE_HOST_REQUIREMENTS: 'false'

    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-reports
        path: |
          tests/playwright/output/
          tests/playwright/reports/
        retention-days: 30

#      npm install @playwright/test
#      npm install --global http-server
